?iris
?summary
?head
head(iris, n=10)
?head
head(iris, n=-2)
?head
head(iris, n=-3)
?L
?6L
7L/2
7L/3L
dim(iris)
storage.mode(dim(iris))
?typeof
mode(dim(iris))
type(dime(iris))
type(dim(iris))
dim(airquality)
col(airquality)
?col2rgb
?col
head(airquality, n = 13)
airquality[0]
airquality[1]
?attenu
?summary
summary(attenu)
colnames(airquality)
3.14l
3.14L
colnames(attenu)
iris[3]
iris[, 3:4]
iris[1:10, 2:4]
iris[0:10, 2:4]
iris[-1:10, 2:4]
iris[-3, -5]
iris[-1:-10, -2:-4]
iris[, "Species"]
iris[iris$Species == "setosa",]
iris$Species == "setosa"
colnames(iris)
iris[iris$Petal.Length > 4]
iris$Petal.Length > 4
iris[iris$Petal.Length > 4]
iris[iris$Petal.Length > 4, ]
boxplot(sleep$extra ~ sleep$group, col = "gray",
main = "Diferencias por grupo")
------------------------
# Introducción a la estadística con R
#----------------------------------------
#----------------------------------------
## El test de Student
#----------------------------------------
summary(sleep)
t.test(sleep$extra ~ sleep$group)
------------------------
# Introducción a la estadística con R
#----------------------------------------
#----------------------------------------
## El test de Student
#----------------------------------------
summary(sleep)
summary(sleep)
summary(sleep)
boxplot(sleep$extra ~ sleep$group, col = "gray",
main = "Diferencias por grupo")
t.test(sleep$extra ~ sleep$group)
prop.test
# Estudia los ejemplos de `prop.test`, que implementa una prueba estadística para comprobar
# si dos proporciones son o no _significativamente distintas_.
prop.test
?prop.test
wilcox.test(sleep$extra ~ sleep$group)
wilcox.test(sleep$extra ~ sleep$group)
summary(wilcox.test(sleep$extra ~ sleep$group))
?wilcox.test()
wilcox.test(sleep$extra ~ sleep$group)
wilcox.test(sleep$extra ~ sleep$group)
t.test(sleep$extra ~ sleep$group)
plot(cars$speed, cars$dist)
lm.dist.speed <- lm(cars$dist ~ cars$speed)
lm.dist.speed
plot(cars$speed, cars$dist)
abline(lm.dist.speed, col = "red")
summary(lm.dist.speed)
plot(lm.dist.speed, 1)
datos <- as.data.frame(UCBAdmissions)
datos$Admit <- datos$Admit == "Admitted"
modelo.sin.dept <- glm(Admit ~ Gender,
data = datos, weights = Freq,
family = binomial())
summary(modelo.sin.dept)
modelo.con.dept <- glm(Admit ~ Gender + Dept,
data = datos, weights = Freq,
family = binomial())
summary(modelo.con.dept)
datos <- as.data.frame(UCBAdmissions)
datos$Admit <- datos$Admit == "Admitted"
modelo.sin.dept <- glm(Admit ~ Gender,
data = datos, weights = Freq,
family = binomial())
summary(modelo.sin.dept)
modelo.con.dept <- glm(Admit ~ Gender + Dept,
data = datos, weights = Freq,
family = binomial())
summary(modelo.con.dept)
?glm
is.list(iris)
head(iris)
is.data.frame((iris))
is.table(iris)
datos <- as.data.frame(UCBAdmissions)
datos$Admit <- datos$Admit == "Admitted"
modelo.con.dept <- glm(Admit ~ Gender + Dept,
data = datos, weights = Freq,
family = binomial())
is.list(modelo.con.dept)
length(modelo.con.dept)
length(iris)
dim(modelo.con.dept)
summary(modelo.con.dept)
?matrix
matrix(nrow = 4, ncol = 5)
is.list(matrix(nrow = 4, ncol = 5))
length(iris)
modelo.con.dept$coefficients
mi.lista <- list(a = 1:3, b = c("hola", "adiós"))
mi.lista$z <- matrix(1:4, 2, 2)
length(iris)
mi.lista
mi.lista$z[1]
mi.lista$z[1, 1]
mi.lista$z[1, ]
mi.lista$z[1, 1] <- 3
mi.lista$z[1, 1] <- 2
mi.lista[1:2]
mi.lista[2]
mi.lista[[2]]
mi.lista[2]
mi.lista[2]$b
mi.lista[2]$2
list()
a <- list()
a
lm
sqrt(1:1000)
sqrt(1:1000000000)
tmp <- split(iris, iris$Species)
tmp
tmp[[1]]
type(tmp)
kind(tmp)
typeof(tmp)
typeof(tmp[2])
typeof(tmp[[2])
typeof(tmp[[2]])
lapply(tmp, dim)
lapply(tmp, min)
lapply(tmp, mean(tmp$Petal.Length))
head(iris$Petal.Length)
plot(iris$Petal.Length)
mean(iris$Petal.Length)
abline(v = 3.76)
summary(iris$Petal.Length)
plot(x = iris$Sepal.Length)
plot(x = iris$Pepal.Length)
plot(x = iris$Petal.Length)
plot(x = iris$Petal.Length)
abline(h = 4.92)
abline(h = 3.25)
abline(h = 3.76)
hist(iris$Petal.Length)
abline(h = 3.76)
hist(iris$Petal.Length)
?hist
mean(iris$Petal.Length)
abline(v = 3.76)
ls()
rm(a)
rm(datos)
rm(lm.dist.speed)
rm(mi.lista)
rm(modelo.con.dept)
rm(modelo.sin.dept)
rm(tmp)
dir()
wd()
getwd()
setwd()
dir()
datos <- read.table("material/dat/bnames.csv", sep = ",", header = TRUE)
head(datos)
length(datos)
summary(datos)
?replicate
curve(pnorm(x, 0, 2), -8, 8)
nombres <- sort(datos$name)
head(nombres)
str(nombres)
summary(nombres)
rep(1:4)
?rep
rep(1:4, 2)
rep(1:4, each = 2)
rep(1:4, c(2,2,2,2))
rep(1:4, times = 4:1)
rep(1:4, c(2,1,2,1))
rep(1:4, each = 2, len = 4)
rep(1:4, each = 2, len = 10)
rep(1:4, each = 2, times = 3)
?seq
seq(0, 10, by = 2)
sum(seq(0, 10, by = 2))
sum(seq(0, 1000000, by = 2))
str(datos)
str(airquality)
?mean
head(airquality)
str(airquality)
summary(airquality)
boxplot(iris$Sepal.Width ~ iris$Species, col = "gray",
main = "Especies de iris\nsegún la anchura del sépalo")
boxplot(airquality$Wind ~ airquality$Month)
head(datos)
hist(datos$name["john"])
hist(datos$name == John)
datos$name == John
datos$name == "John"
datos[datos$name == "John"]
datos[datos$name == "John", ]
datos[datos$name == "John" & datos$sex == "boy", ]
hist(datos[datos$name == "John" & datos$sex == "boy", ])
hist(datos$percent[datos[datos$name == "John" & datos$sex == "boy", ]])
head(datos[datos$name == "John" & datos$sex == "boy", ])
losJohn <- datos[datos$name == "John" & datos$sex == "boy", ]
dim(losJohn)
hist(losJohn$percent)
hist(losJohn$year ~ losJohn$percent)
?hist
hist(losJohn$percent, breaks = 40)
boxplot(airquality$Wind ~ airquality$Month)
str( boxplot(airquality$Wind ~ airquality$Month))
head(airquality[c("Wind", "Month"), ])
airquality[c("Wind", "Month"), ]
airquality[ ,c("Wind", "Month")]
mean(airquality[ ,c("Wind", "Month" == 5)]
)
mean(airquality[ ,c("Wind", "Month" == 5)])
mean(airquality["Month" == 5 ,c("Wind", "Month")])
summary(losJohn)
hist(losJohn$percent)
?base
install.packages("shiny")
install.packages("devtools")
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
?runif
?exams
setwd("~/")
library(shiny); source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
runApp('app_prueba2')
head(faithful$eruptions)
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('~/shinys.R')
source('~/shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
source('shinys.R')
output:
flexdashboard::flex_dashboard:
storyboard: true
---
title: "Storyboard"
library(shiny); source('shinys.R')
source('shinys.R')
?cars
?WorldPhones
head(WorldPhones)
head(airmiles)
str(airmiles)
head(Orange)
summary(Orange)
summary(women)
WorldPhones[,input$region]*1000
summary(WorldPhones)
hist(WorldPhones)
head(WorldPhones)
WorldPhones$Europe
str(WorldPhones)
dim(WorldPhones)
WorldPhones
WorldPhones[1, ]
WorldPhones[, 1]
hist(WorldPhones[, 1])
plot(WorldPhones[, 1])
?plot
plot(WorldPhones[, 1], t = "b")
plot(WorldPhones[, 1], t = "b", ylab = "cantidad de coches")
plot(WorldPhones[, 1], t = "b", xlab = "año", ylab = "cantidad de coches")
plot(WorldPhones[, 1], t = "b", xlab = "año", ylab = "cantidad de coches", col = "steelblue")
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
table(rpois(100, 5))
plot(WorldPhones[, 1], t = "h", xlab = "año", ylab = "cantidad de coches", col = "steelblue")
plot(WorldPhones[, 1], t = "h", lwd = 3, xlab = "año", ylab = "cantidad de coches", col = "steelblue")
plot(WorldPhones[, 1], t = "h", lwd = 3, xlab = "año", ylab = "cantidad de coches", col = "steelblue")
plot(WorldPhones[, 1], t = "b", lwd = 3, xlab = "año", ylab = "cantidad de coches", col = "steelblue")
plot(WorldPhones[, 1], t = "h", lwd = 3, xlab = "año", ylab = "cantidad de coches", col = "steelblue")
WorldPhones[, 1]
ncol(WorldPhones[, 1])
dim(WorldPhones[, 1])
dim(WorldPhones[1, 1])
dim(WorldPhones[, ])
WorldPhones[1, ]
WorldPhones[, 1]
nrow(WorldPhones[, 1])
row.names(WorldPhones[, 1])
a <- row.names(WorldPhones[, 1])
a
typeof(WorldPhones)
WorldPhones
barplot(WorldPhones)
barplot(WorldPhones[, 1])
plot(WorldPhones[, 1])
?plot
WorldPhones[1951, ]
WorldPhones["1951", ]
sampv <- 1:100
sample(sampv%%20)
library(XML)
install.packages(XML)
library(xml2)
install.packages("XML"})
install.packages("XML")
iris?
?iris
data()
str(Orange)
length(Orange)
summary(Orange)
dim(Orange)
nrow(Orange)
plot(Orange)
hist(Orange$age)
?Orange
anscombe
plot(anscombe)
library(ggplot2)
gg <- ggplot(anscombe.data, aes(x = x, y = y))
gg <- ggplot(anscombe, aes(x = x, y = y))
gg <- gg + geom_point(color = "black")
gg <- gg + facet_wrap(~Set, ncol = 2)
gg <- gg + geom_smooth(formula = y ~ x, method = "lm", se = FALSE, data = anscombe.data)
gg <- gg + geom_smooth(formula = y ~ x, method = "lm", se = FALSE, data = anscombe)
gg
gg <- ggplot(anscombe, aes(x = x, y = y))
gg <- gg + geom_point(color = "black")
gg <- gg + facet_wrap(~Set, ncol = 2)
gg <- gg + geom_smooth(formula = y ~ x, method = "lm", se = FALSE, data = anscombe)
gg
gg <- ggplot(anscombe, aes(x = x, y = y)) + geom_point(color = "black") + facet_wrap(~Set, ncol = 2) + geom_smooth(formula = y ~ x, method = "lm", se = FALSE, data = anscombe)
gg
ggplot(iris, aes(x = Petal.Length, y = Petal.Width)) +
geom_point() + geom_smooth() +
facet_grid(Species~.)iris$Species
ggplot(iris, aes(x = Petal.Length, y = Petal.Width)) + geom_point() + geom_smooth() + facet_grid(Species~.)iris$Species
ggplot(iris, aes(x = Petal.Length, y = Petal.Width)) + geom_point() + geom_smooth() + facet_grid(Species~.)
ggplot(iris, aes(x = Petal.Length, y = Petal.Width)) + geom_point() + geom_smooth() + facet_wrap(Species~.)
ggplot(iris, aes(x = Petal.Length, y = Petal.Width)) + geom_point() + geom_smooth()
gg <- ggplot(anscombe, aes(x = x, y = y)) + geom_point(color = "black") +  geom_smooth(formula = y ~ x, method = "lm", se = FALSE, data = anscombe)
gg
library(Tmisc)
data(quartet)
str(quartet)
load("C:/Users/52444/Downloads/recess.RData")
dim(recess)
recess
load("C:/Users/52444/Downloads/fish.RData")
fish.species
head(fish.tidy)
str(fish.tidy)
summary(fish.tidy)
library(ggplot2)
?economics
?ggplot
ggplot(fish.tidy, aes(Year, Capture)) + geom_point()
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_point()
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_point() + facet_grid(vars(Year))
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_point() + facet_grid(vars(Capture))
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_point() + facet_grid(cols = vars(Capture))
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_point() + facet_grid(rows = vars(Capture))
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_point() + facet_wrap(vars(Species))
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line() + facet_wrap(vars(Species))
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line()
head(fish.year)
head(fish.species)
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line() + theme_gray()
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line()
View(fish.species)
View(fish.tidy)
?write.csv
library(stringr)
dir()
ls()
getwd()
setwd("~/ejercicio_final_R")
write.csv(fish.species, "~/ejercicio_final_R/fish.species.csv", col.names = FALSE)
read.csv(fish.species.csv)
read.csv("fish.species.csv"")
read.csv("fish.species.csv")
write.csv(fish.tidy, "~/ejercicio_final_R/fish.tidy.csv", col.names = FALSE)
fisht <- read.csv("fish.tidy.csv")
head(fisht)
colnames(fisht)
dim(fisht)
colnames(fish.species)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## Sección de regex
Al empezar buscar dos páginas para comparar, como meta tenía explorar hasta 10 páginas y ver que es lo que ofrecía cada una. Las evalue en el contenido que proveen, la estética de la página en sí y ejercicios o ejemplos para poder revisar lo entendido. De esas diez llegue a reducirlo a las dos requeridas, las cuales tienen como objetivo enseñarle al lector cómo usar las expresiones regulares (Regex), una lo reduce hasta lo más básico mientras que la otra trata de enseñar todo al lector de una manera abrumadora.
fish.tidy <- read.csv("fish_tidy.csv")
getwd()
?qplot
fish.tidy <- read.csv("fish_tidy.csv")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010", color = "Especies")
summary(fish.tidy)
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010", color = "Especies") + facet_wrap(Species)
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010", color = "Especies") + facet_wrap(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010", color = "Especies") + facet_wrap(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species))
ggplot(fish.tidy, aes(Year, Capture) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_grid(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture)) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_grid(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture)) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species))
?facet_wrap
?geom_line
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture)) + geom_line() + labs(x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture)) + geom_line() + labs(x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species))
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture)) + geom_line(color = "steelblue") + labs(x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species))
ggplot(fish.tidy, aes(Year, Capture)) + geom_line(color = "steelblue") + labs(x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species)) + theme_dark()
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture, color = Species)) + geom_line() + labs(    x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010", color = "Especies")
ggplot(fish.tidy, aes(Year, Capture)) + geom_line(color = "steelblue") + labs(x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species)) + theme_linedraw()
ggplot(fish.tidy, aes(Year, Capture)) + geom_line(color = "steelblue") + labs(x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species)) + theme_light()
colors
colours
head(colors())
colors()
fish.tidy <- read.csv("fish_tidy.csv")
ggplot(fish.tidy, aes(Year, Capture)) + geom_line(color = "blue3") + labs(x = "Año",  y = "Cantidad de salmón pescado", title ="Salmón pescado desde 1950 hasta 2010") + facet_wrap(vars(Species)) + theme_light()
datasets
?datasets
datasets
datasets()
data()
library(DT)
?tic
head(fish.tidy)
head(fish.species)
?read.csv()
knitr::opts_chunk$set(echo = TRUE)
packages <- c("ggplot", "DT")
library(ggplot2)
library(DT)
theme_set(theme_light())
fish.tidy <- read.csv("fish_tidy.csv")
fish.species <- read.csv("fish_species.csv", row.names = NULL)
datatable(fish.species)
class(fish.tidy)
fish.tidy[, 2:]
fish.tidy[, 2]
fish.tidy[1:3, 2]
fish.tidy[[1:3, 2]]
class(fish.tidy[, 2])
class(fish.tidy[, 2:3])
length(fish.tidy)
head(fish.tidy)
head(fish.species)
len(fish.species)
length(fish.species)
datatable(fish.species)
